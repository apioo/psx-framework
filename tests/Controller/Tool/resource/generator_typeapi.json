{
  "baseUrl": "http://127.0.0.1/",
  "operations": {
    "oauth.authorize": {
      "path": "/authorization/authorize",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Passthru"
        }
      },
      "arguments": {
        "response_type": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "client_id": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "redirect_uri": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "scope": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "state": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "oauth.callback": {
      "path": "/authorization/callback",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Passthru"
        }
      },
      "arguments": {
        "error": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "error_description": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "code": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "state": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "oauth.token": {
      "path": "/authorization/token",
      "method": "POST",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "AccessToken"
        }
      },
      "arguments": {
        "authorization": {
          "in": "header",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "type": "reference",
            "target": "Passthru"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "system.getLinks": {
      "path": "/system/discovery",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "DiscoveryCollection"
        }
      },
      "arguments": [],
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "system.generate": {
      "path": "/system/generator/:type",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Passthru"
        }
      },
      "arguments": {
        "type": {
          "in": "path",
          "schema": {
            "description": "",
            "type": "string"
          }
        },
        "filter": {
          "in": "query",
          "schema": {
            "description": "",
            "type": "string"
          }
        },
        "config": {
          "in": "query",
          "schema": {
            "description": "",
            "type": "string"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "system.getRouting": {
      "path": "/system/routing",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "RoutingCollection"
        }
      },
      "arguments": [],
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.body_controller.doGet": {
      "path": "/tests/body",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Passthru"
        }
      },
      "arguments": {
        "type": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.content_type_controller.binary": {
      "path": "/tests/content_type/binary",
      "method": "POST",
      "return": {
        "code": 200,
        "contentType": "application/octet-stream"
      },
      "arguments": {
        "body": {
          "in": "body",
          "contentType": "application/octet-stream"
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.content_type_controller.form": {
      "path": "/tests/content_type/form",
      "method": "POST",
      "return": {
        "code": 200,
        "contentType": "application/x-www-form-urlencoded"
      },
      "arguments": {
        "body": {
          "in": "body",
          "contentType": "application/x-www-form-urlencoded"
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.content_type_controller.json": {
      "path": "/tests/content_type/json",
      "method": "POST",
      "return": {
        "code": 200,
        "contentType": "application/json"
      },
      "arguments": {
        "body": {
          "in": "body",
          "contentType": "application/json"
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.content_type_controller.multipart": {
      "path": "/tests/content_type/multipart",
      "method": "POST",
      "return": {
        "code": 200,
        "contentType": "multipart/form-data"
      },
      "arguments": {
        "body": {
          "in": "body",
          "contentType": "multipart/form-data"
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.content_type_controller.text": {
      "path": "/tests/content_type/text",
      "method": "POST",
      "return": {
        "code": 200,
        "contentType": "text/plain"
      },
      "arguments": {
        "body": {
          "in": "body",
          "contentType": "text/plain"
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.dummy_controller.doGet": {
      "path": "/tests/dummy",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Passthru"
        }
      },
      "arguments": [],
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.exception_controller.doGet": {
      "path": "/tests/exception",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Passthru"
        }
      },
      "arguments": [],
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.filter_controller.doGet": {
      "path": "/tests/filter",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Passthru"
        }
      },
      "arguments": [],
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.passthru_controller.doGet": {
      "path": "/tests/passthru",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Passthru"
        }
      },
      "arguments": [],
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.passthru_controller.doPost": {
      "path": "/tests/passthru",
      "method": "POST",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Passthru"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "type": "reference",
            "target": "Passthru"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.popo_controller.doGet": {
      "path": "/tests/popo/:id",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Property"
        }
      },
      "arguments": {
        "id": {
          "in": "path",
          "schema": {
            "type": "integer"
          }
        },
        "type": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.popo_controller.doPost": {
      "path": "/tests/popo/:id",
      "method": "POST",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Property"
        }
      },
      "arguments": {
        "id": {
          "in": "path",
          "schema": {
            "type": "integer"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "type": "reference",
            "target": "Property"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.redirect_exception_controller.doGet": {
      "path": "/tests/redirect",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Passthru"
        }
      },
      "arguments": [],
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.schema_controller.doGet": {
      "path": "/tests/schema/:name/:type",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Collection"
        }
      },
      "arguments": {
        "name": {
          "in": "path",
          "schema": {
            "description": "Name parameter",
            "type": "string"
          }
        },
        "type": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "startIndex": {
          "in": "query",
          "schema": {
            "description": "startIndex parameter",
            "type": "string"
          }
        },
        "float": {
          "in": "query",
          "schema": {
            "type": "number"
          }
        },
        "boolean": {
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        },
        "date": {
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date"
          }
        },
        "dateTime": {
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "throws": [],
      "description": "Returns a collection",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.schema_controller.doPost": {
      "path": "/tests/schema/:name/:type",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "type": "reference",
          "target": "Message"
        }
      },
      "arguments": {
        "name": {
          "in": "path",
          "schema": {
            "description": "Name parameter",
            "type": "string"
          }
        },
        "type": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "record": {
          "in": "body",
          "schema": {
            "type": "reference",
            "target": "Create"
          }
        }
      },
      "throws": [],
      "description": "lorem ipsum",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.schema_controller.doPut": {
      "path": "/tests/schema/:name/:type",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Message"
        }
      },
      "arguments": {
        "name": {
          "in": "path",
          "schema": {
            "description": "Name parameter",
            "type": "string"
          }
        },
        "type": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "type": "reference",
            "target": "Update"
          }
        }
      },
      "throws": [],
      "description": "lorem ipsum",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.schema_controller.doDelete": {
      "path": "/tests/schema/:name/:type",
      "method": "DELETE",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Message"
        }
      },
      "arguments": {
        "name": {
          "in": "path",
          "schema": {
            "description": "Name parameter",
            "type": "string"
          }
        },
        "type": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [],
      "description": "lorem ipsum",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.schema_controller.doPatch": {
      "path": "/tests/schema/:name/:type",
      "method": "PATCH",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Message"
        }
      },
      "arguments": {
        "name": {
          "in": "path",
          "schema": {
            "description": "Name parameter",
            "type": "string"
          }
        },
        "type": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "type": "reference",
            "target": "Patch"
          }
        }
      },
      "throws": [],
      "description": "lorem ipsum",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.status_code_exception_controller.doGet": {
      "path": "/tests/status/:code",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Passthru"
        }
      },
      "arguments": {
        "code": {
          "in": "path",
          "schema": {
            "type": "integer"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.table_controller.doGet": {
      "path": "/tests/table",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Passthru"
        }
      },
      "arguments": [],
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.table_controller.doRow": {
      "path": "/tests/table/row",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Passthru"
        }
      },
      "arguments": [],
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.table_controller.doNested": {
      "path": "/tests/table/nested",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Passthru"
        }
      },
      "arguments": [],
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.type_schema_controller.doGet": {
      "path": "/tests/typeschema/:id",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Property"
        }
      },
      "arguments": {
        "id": {
          "in": "path",
          "schema": {
            "type": "integer"
          }
        },
        "type": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "tests.controller.foo.application.type_schema_controller.doPost": {
      "path": "/tests/typeschema/:id",
      "method": "POST",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Property"
        }
      },
      "arguments": {
        "id": {
          "in": "path",
          "schema": {
            "type": "integer"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "type": "reference",
            "target": "Property"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "app.controller.population_popo.getAll": {
      "path": "/population/popo",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "PopulationCollection"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "description": "",
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "description": "",
            "type": "integer"
          }
        }
      },
      "throws": [],
      "description": "Collection endpoint",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "app.controller.population_popo.get": {
      "path": "/population/popo/:id",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Population"
        }
      },
      "arguments": {
        "id": {
          "in": "path",
          "schema": {
            "type": "integer"
          }
        }
      },
      "throws": [],
      "description": "Collection endpoint",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "app.controller.population_popo.create": {
      "path": "/population/popo",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "type": "reference",
          "target": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "type": "reference",
            "target": "Population"
          }
        }
      },
      "throws": [],
      "description": "Collection endpoint",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "app.controller.population_popo.update": {
      "path": "/population/popo/:id",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Message"
        }
      },
      "arguments": {
        "id": {
          "in": "path",
          "schema": {
            "type": "integer"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "type": "reference",
            "target": "Population"
          }
        }
      },
      "throws": [],
      "description": "Collection endpoint",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "app.controller.population_popo.delete": {
      "path": "/population/popo/:id",
      "method": "DELETE",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Message"
        }
      },
      "arguments": {
        "id": {
          "in": "path",
          "schema": {
            "type": "integer"
          }
        }
      },
      "throws": [],
      "description": "Collection endpoint",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "app.controller.population_type_schema.getAll": {
      "path": "/population/typeschema",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Collection"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        }
      },
      "throws": [],
      "description": "Collection endpoint",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "app.controller.population_type_schema.get": {
      "path": "/population/typeschema",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "type": "reference",
          "target": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "type": "reference",
            "target": "Entity"
          }
        }
      },
      "throws": [],
      "description": "Collection endpoint",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "app.controller.population_type_schema.create": {
      "path": "/population/typeschema/:id",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Entity"
        }
      },
      "arguments": {
        "id": {
          "in": "path",
          "schema": {
            "type": "integer"
          }
        }
      },
      "throws": [],
      "description": "Collection endpoint",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "app.controller.population_type_schema.update": {
      "path": "/population/typeschema/:id",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Message"
        }
      },
      "arguments": {
        "id": {
          "in": "path",
          "schema": {
            "type": "integer"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "type": "reference",
            "target": "Entity"
          }
        }
      },
      "throws": [],
      "description": "Collection endpoint",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "app.controller.population_type_schema.delete": {
      "path": "/population/typeschema/:id",
      "method": "DELETE",
      "return": {
        "code": 200,
        "schema": {
          "type": "reference",
          "target": "Message"
        }
      },
      "arguments": {
        "id": {
          "in": "path",
          "schema": {
            "type": "integer"
          }
        }
      },
      "throws": [],
      "description": "Collection endpoint",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    }
  },
  "definitions": {
    "AccessToken": {
      "type": "struct",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "tokenType": {
          "type": "string"
        },
        "expiresIn": {
          "type": "integer"
        },
        "refreshToken": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "Any": {
      "type": "map",
      "schema": {
        "type": "string"
      }
    },
    "ChoiceA": {
      "type": "struct",
      "properties": {
        "foo": {
          "type": "string"
        }
      }
    },
    "ChoiceB": {
      "type": "struct",
      "properties": {
        "bar": {
          "type": "string"
        }
      }
    },
    "Collection": {
      "type": "struct",
      "properties": {
        "entry": {
          "type": "array",
          "schema": {
            "type": "generic",
            "name": "Entry"
          }
        }
      }
    },
    "Complex": {
      "type": "struct",
      "properties": {
        "foo": {
          "type": "string"
        }
      }
    },
    "Create": {
      "type": "struct",
      "parent": {
        "type": "reference",
        "target": "Entry"
      }
    },
    "DiscoveryCollection": {
      "type": "struct",
      "properties": {
        "links": {
          "type": "array",
          "schema": {
            "type": "reference",
            "target": "DiscoveryLink"
          }
        }
      }
    },
    "DiscoveryLink": {
      "type": "struct",
      "properties": {
        "rel": {
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "method": {
          "type": "string"
        }
      }
    },
    "Entity": {
      "description": "Represents an internet population entity",
      "type": "struct",
      "properties": {
        "id": {
          "description": "Unique id for each entry",
          "type": "integer"
        },
        "place": {
          "description": "Position in the top list",
          "type": "integer"
        },
        "region": {
          "description": "Name of the region",
          "type": "string"
        },
        "population": {
          "description": "Complete number of population",
          "type": "integer"
        },
        "users": {
          "description": "Number of internet users",
          "type": "integer"
        },
        "worldUsers": {
          "description": "Percentage users of the world",
          "type": "number"
        },
        "datetime": {
          "description": "Date when the entity was created",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Entry": {
      "type": "struct",
      "properties": {
        "id": {
          "type": "integer"
        },
        "userId": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Message": {
      "type": "struct",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Passthru": {
      "description": "No schema information available",
      "type": "map",
      "schema": {
        "type": "any"
      }
    },
    "Patch": {
      "type": "struct",
      "parent": {
        "type": "reference",
        "target": "Entry"
      }
    },
    "Population": {
      "type": "struct",
      "properties": {
        "id": {
          "type": "integer"
        },
        "place": {
          "type": "integer"
        },
        "region": {
          "type": "string"
        },
        "population": {
          "type": "integer"
        },
        "users": {
          "type": "integer"
        },
        "worldUsers": {
          "type": "number"
        },
        "insertDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PopulationCollection": {
      "type": "struct",
      "parent": {
        "type": "reference",
        "target": "Collection",
        "template": {
          "T": "Population"
        }
      }
    },
    "Property": {
      "type": "struct",
      "properties": {
        "any": {
          "type": "reference",
          "target": "Any"
        },
        "array": {
          "type": "array",
          "schema": {
            "type": "string"
          }
        },
        "arrayComplex": {
          "type": "array",
          "schema": {
            "type": "reference",
            "target": "Complex"
          }
        },
        "boolean": {
          "type": "boolean"
        },
        "complex": {
          "type": "reference",
          "target": "Complex"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "dateTime": {
          "type": "string",
          "format": "date-time"
        },
        "float": {
          "type": "number"
        },
        "integer": {
          "type": "integer"
        },
        "string": {
          "type": "string"
        },
        "time": {
          "type": "string",
          "format": "time"
        }
      }
    },
    "RoutingCollection": {
      "type": "struct",
      "properties": {
        "routings": {
          "type": "array",
          "schema": {
            "type": "reference",
            "target": "RoutingRoute"
          }
        }
      }
    },
    "RoutingRoute": {
      "type": "struct",
      "properties": {
        "method": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "operationId": {
          "type": "string"
        }
      }
    },
    "Update": {
      "type": "struct",
      "parent": {
        "type": "reference",
        "target": "Entry"
      }
    }
  }
}