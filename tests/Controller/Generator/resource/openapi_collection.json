{
  "components": {
    "schemas": {
      "Collection": {
        "properties": {
          "entry": {
            "items": {
              "$ref": "#/components/schemas/Entry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Create": {
        "properties": {
          "date": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "title": {
            "maxLength": 16,
            "minLength": 3,
            "pattern": "[A-z]+",
            "type": "string"
          },
          "userId": {
            "type": "integer"
          }
        },
        "required": [
          "title",
          "date"
        ],
        "type": "object"
      },
      "Delete": {
        "properties": {
          "date": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "title": {
            "maxLength": 16,
            "minLength": 3,
            "pattern": "[A-z]+",
            "type": "string"
          },
          "userId": {
            "type": "integer"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "Entry": {
        "properties": {
          "date": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "title": {
            "maxLength": 16,
            "minLength": 3,
            "pattern": "[A-z]+",
            "type": "string"
          },
          "userId": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Get_Query": {
        "properties": {
          "boolean": {
            "type": "boolean"
          },
          "date": {
            "format": "date",
            "type": "string"
          },
          "datetime": {
            "format": "date-time",
            "type": "string"
          },
          "float": {
            "type": "number"
          },
          "startIndex": {
            "description": "startIndex parameter",
            "maximum": 32,
            "minimum": 0,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Message": {
        "properties": {
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Patch": {
        "properties": {
          "date": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "title": {
            "maxLength": 16,
            "minLength": 3,
            "pattern": "[A-z]+",
            "type": "string"
          },
          "userId": {
            "type": "integer"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "Path": {
        "properties": {
          "name": {
            "description": "Name parameter",
            "maxLength": 16,
            "minLength": 0,
            "pattern": "[A-z]+",
            "type": "string"
          },
          "type": {
            "enum": [
              "foo",
              "bar"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Update": {
        "properties": {
          "date": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "title": {
            "maxLength": 16,
            "minLength": 3,
            "pattern": "[A-z]+",
            "type": "string"
          },
          "userId": {
            "type": "integer"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      }
    }
  },
  "info": {
    "title": "PSX",
    "version": "1"
  },
  "openapi": "3.0.0",
  "paths": {
    "/api": {
      "delete": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Delete"
              }
            }
          },
          "description": "DELETE Request"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            },
            "description": "DELETE 200 Response"
          }
        }
      },
      "get": {
        "description": "Returns a collection",
        "parameters": [
          {
            "description": "startIndex parameter",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "schema": {
              "description": "startIndex parameter",
              "maximum": 32,
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "float",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "boolean",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "datetime",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            },
            "description": "GET 200 Response"
          }
        }
      },
      "parameters": [
        {
          "description": "Name parameter",
          "in": "path",
          "name": "name",
          "required": false,
          "schema": {
            "description": "Name parameter",
            "maxLength": 16,
            "minLength": 0,
            "pattern": "[A-z]+",
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "type",
          "required": false,
          "schema": {
            "enum": [
              "foo",
              "bar"
            ],
            "type": "string"
          }
        }
      ],
      "patch": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "description": "PATCH Request"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            },
            "description": "PATCH 200 Response"
          }
        }
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Create"
              }
            }
          },
          "description": "POST Request"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            },
            "description": "POST 201 Response"
          }
        }
      },
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Update"
              }
            }
          },
          "description": "PUT Request"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            },
            "description": "PUT 200 Response"
          }
        }
      }
    },
    "/endpoint": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            },
            "description": "GET 200 Response"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://127.0.0.1/"
    }
  ]
}
