Autowirable Types
=================

 The following classes & interfaces can be used as type-hints when autowiring:
 
 A database abstraction-level connection that implements features like events, transaction isolation levels, configuration, emulated transaction nesting, lazy connecting and more.
 Doctrine\DBAL\Connection
 
 Task for executing arbitrary SQL that can come from a file or directly from the command line.
 Doctrine\DBAL\Tools\Console\Command\RunSqlCommand
 
 Doctrine\DBAL\Tools\Console\ConnectionProvider - alias:Doctrine\DBAL\Tools\Console\ConnectionProvider\SingleConnectionProvider
 
 Doctrine\DBAL\Tools\Console\ConnectionProvider\SingleConnectionProvider
 
 The DependencyFactory is responsible for wiring up and managing internal class dependencies.
 Doctrine\Migrations\DependencyFactory
 
 The DiffCommand class is responsible for generating a migration by comparing your current database schema to your mapping information.
 Doctrine\Migrations\Tools\Console\Command\DiffCommand
 
 The DumpSchemaCommand class is responsible for dumping your current database schema to a migration class. This is intended to be used in conjunction with the RollupCommand.
 Doctrine\Migrations\Tools\Console\Command\DumpSchemaCommand
 
 The ExecuteCommand class is responsible for executing migration versions up or down manually.
 Doctrine\Migrations\Tools\Console\Command\ExecuteCommand
 
 The GenerateCommand class is responsible for generating a blank migration class for you to modify to your needs.
 Doctrine\Migrations\Tools\Console\Command\GenerateCommand
 
 The LatestCommand class is responsible for outputting what your latest version is.
 Doctrine\Migrations\Tools\Console\Command\LatestCommand
 
 The ListCommand class is responsible for outputting a list of all available migrations and their status.
 Doctrine\Migrations\Tools\Console\Command\ListCommand
 
 The MigrateCommand class is responsible for executing a migration from the current version to another version up or down. It will calculate all the migration versions that need to be executed and execute them.
 Doctrine\Migrations\Tools\Console\Command\MigrateCommand
 
 The RollupCommand class is responsible for deleting all previously executed migrations from the versions table and marking the freshly dumped schema migration (that was created with DumpSchemaCommand) as migrated.
 Doctrine\Migrations\Tools\Console\Command\RollupCommand
 
 The StatusCommand class is responsible for outputting what the current state is of all your migrations. It shows what your current version is, how many new versions you have to execute, etc. and details about each of your migrations.
 Doctrine\Migrations\Tools\Console\Command\StatusCommand
 
 Doctrine\Migrations\Tools\Console\Command\SyncMetadataCommand
 
 The UpToDateCommand class outputs if your database is up to date or if there are new migrations that need to be executed.
 Doctrine\Migrations\Tools\Console\Command\UpToDateCommand
 
 The VersionCommand class is responsible for manually adding and deleting migration versions from the tracking table.
 Doctrine\Migrations\Tools\Console\Command\VersionCommand
 
 Monolog log channel
 Monolog\Logger
 
 ApiManager
 PSX\Api\ApiManager
 
 ApiManagerInterface
 PSX\Api\ApiManagerInterface - alias:PSX\Api\ApiManager
 
 PushCommand
 PSX\Api\Console\PushCommand
 
 This factory returns a GeneratorRegistry which contains all available generator types and which can be used to obtain an actual generator
 PSX\Api\GeneratorFactory
 
 LocalRepository
 PSX\Api\Repository\LocalRepository
 
 SDKgenRepository
 PSX\Api\Repository\SDKgenRepository
 
 ConfigInterface
 PSX\Api\Repository\SDKgen\ConfigInterface - alias:PSX\Framework\Api\Repository\SDKgen\Config
 
 SchemaRepository
 PSX\Api\Repository\SchemaRepository
 
 A scanner knows all available operations and can be used to generate a specification for the system. Through the filter it is possible restrict operations to a specific subset
 PSX\Api\ScannerInterface - alias:PSX\Framework\Api\Scanner\RoutingParser
 
 FilterFactory
 PSX\Api\Scanner\FilterFactory
 
 FilterFactoryInterface
 PSX\Api\Scanner\FilterFactoryInterface - alias:PSX\Api\Scanner\FilterFactory
 
 Main entry point of the data library. Through the processor it is possible to reade and write arbitrary data in conformance to a specific schema.
 PSX\Data\Processor
 
 DispatchInterface
 PSX\Engine\DispatchInterface - alias:PSX\Framework\Dispatch\Dispatch
 
 Config
 PSX\Framework\Api\Repository\SDKgen\Config
 
 Scanner which goes through all registered routes and uses the API parser to get a fitting specification
 PSX\Framework\Api\Scanner\RoutingParser
 
 PSX\Framework\App\Controller\PopulationPopo
 
 PSX\Framework\App\Controller\PopulationTypeSchema
 
 Population
 PSX\Framework\App\Service\Population
 
 Population
 PSX\Framework\App\Table\Population
 
 A console command for autowiring information.
 PSX\Framework\Command\Debug\AutowiringCommand
 
 A console command for retrieving information about services.
 PSX\Framework\Command\Debug\ContainerCommand
 
 A console command for retrieving information about event dispatcher.
 PSX\Framework\Command\Debug\EventDispatcherCommand
 
 ModelCommand
 PSX\Framework\Command\Generate\ModelCommand
 
 SdkCommand
 PSX\Framework\Command\Generate\SdkCommand
 
 TableCommand
 PSX\Framework\Command\Generate\TableCommand
 
 ConsumeCommand
 PSX\Framework\Command\Messenger\ConsumeCommand
 
 SetupTransportCommand
 PSX\Framework\Command\Messenger\SetupTransportCommand
 
 RouteCommand
 PSX\Framework\Command\RouteCommand
 
 ServeCommand
 PSX\Framework\Command\ServeCommand
 
 ConfigInterface
 PSX\Framework\Config\ConfigInterface - alias:PSX\Framework\Config\ContainerConfig
 
 ContainerConfig
 PSX\Framework\Config\ContainerConfig
 
 Directory
 PSX\Framework\Config\Directory
 
 DirectoryInterface
 PSX\Framework\Config\DirectoryInterface - alias:PSX\Framework\Config\Directory
 
 ConnectionFactory
 PSX\Framework\Connection\ConnectionFactory
 
 ApplicationFactory
 PSX\Framework\Console\ApplicationFactory
 
 AuthorizationController
 PSX\Framework\Controller\OAuth2\AuthorizationController
 
 CallbackController
 PSX\Framework\Controller\OAuth2\CallbackController
 
 OAuth2 token endpoint controller
 PSX\Framework\Controller\OAuth2\TokenController
 
 DiscoveryController
 PSX\Framework\Controller\Tool\DiscoveryController
 
 Generator controller which supports automatically every type from the generator factory
 PSX\Framework\Controller\Tool\GeneratorController
 
 RoutingController
 PSX\Framework\Controller\Tool\RoutingController
 
 ProcessorFactory
 PSX\Framework\Data\ProcessorFactory
 
 The dispatcher routes the request to the fitting controller. The route method contains the global try catch for the application
 PSX\Framework\Dispatch\Dispatch
 
 EventDispatcherFactory
 PSX\Framework\Event\EventDispatcherFactory
 
 Converter
 PSX\Framework\Exception\Converter
 
 ConverterInterface
 PSX\Framework\Exception\ConverterInterface - alias:PSX\Framework\Exception\Converter
 
 ControllerExecutorFactory
 PSX\Framework\Filter\ControllerExecutorFactory
 
 ControllerExecutorFactoryInterface
 PSX\Framework\Filter\ControllerExecutorFactoryInterface - alias:PSX\Framework\Filter\ControllerExecutorFactory
 
 PostFilterCollection
 PSX\Framework\Filter\PostFilterCollection
 
 PreFilterCollection
 PSX\Framework\Filter\PreFilterCollection
 
 RequestReader
 PSX\Framework\Http\RequestReader
 
 ResponseWriter
 PSX\Framework\Http\ResponseWriter
 
 LoggingListener
 PSX\Framework\Listener\LoggingListener
 
 In our test cases we sometimes assert a value inside a controller which was called by a test case, this listener simply redirects all PHPUnit exceptions
 PSX\Framework\Listener\PHPUnitExceptionListener
 
 ContextFactory
 PSX\Framework\Loader\ContextFactory
 
 ContextFactoryInterface
 PSX\Framework\Loader\ContextFactoryInterface - alias:PSX\Framework\Loader\ContextFactory
 
 ControllerResolver
 PSX\Framework\Loader\ControllerResolver
 
 ControllerResolverInterface
 PSX\Framework\Loader\ControllerResolverInterface - alias:PSX\Framework\Loader\ControllerResolver
 
 Loader
 PSX\Framework\Loader\Loader
 
 LoaderInterface
 PSX\Framework\Loader\LoaderInterface - alias:PSX\Framework\Loader\Loader
 
 LocationFinderInterface
 PSX\Framework\Loader\LocationFinderInterface - alias:PSX\Framework\Loader\LocationFinder\RoutingParser
 
 Location finder which gets a collection of routes from an routing parser
 PSX\Framework\Loader\LocationFinder\RoutingParser
 
 ReverseRouter
 PSX\Framework\Loader\ReverseRouter
 
 RoutingParserInterface
 PSX\Framework\Loader\RoutingParserInterface - alias:PSX\Framework\Loader\RoutingParser\CachedParser
 
 Uses the attributes at a controller to define the routing
 PSX\Framework\Loader\RoutingParser\AttributeParser
 
 CachedParser
 PSX\Framework\Loader\RoutingParser\CachedParser
 
 LoggerFactory
 PSX\Framework\Logger\LoggerFactory
 
 MailerFactory
 PSX\Framework\Mailer\MailerFactory
 
 HandlersLocator
 PSX\Framework\Messenger\HandlersLocator
 
 SendersLocator
 PSX\Framework\Messenger\SendersLocator
 
 DependencyFactoryFactory
 PSX\Framework\Migration\DependencyFactoryFactory
 
 AuthorizerInterface
 PSX\Framework\OAuth2\AuthorizerInterface - alias:PSX\Framework\Tests\OAuth2\TestAuthorizer
 
 CallbackInterface
 PSX\Framework\OAuth2\CallbackInterface - alias:PSX\Framework\Tests\OAuth2\TestCallback
 
 GrantTypeFactory
 PSX\Framework\OAuth2\GrantTypeFactory
 
 VoidAuthorizer
 PSX\Framework\OAuth2\VoidAuthorizer
 
 VoidCallback
 PSX\Framework\OAuth2\VoidCallback
 
 Environment
 PSX\Framework\Test\Environment
 
 SetBodyController
 PSX\Framework\Tests\Controller\Foo\Application\BodyController
 
 DummyController
 PSX\Framework\Tests\Controller\Foo\Application\DummyController
 
 ExceptionController
 PSX\Framework\Tests\Controller\Foo\Application\ExceptionController
 
 FilterController
 PSX\Framework\Tests\Controller\Foo\Application\FilterController
 
 PassthruController
 PSX\Framework\Tests\Controller\Foo\Application\PassthruController
 
 PopoController
 PSX\Framework\Tests\Controller\Foo\Application\PopoController
 
 RedirectExceptionController
 PSX\Framework\Tests\Controller\Foo\Application\RedirectExceptionController
 
 SchemaController
 PSX\Framework\Tests\Controller\Foo\Application\SchemaController
 
 StatusCodeExceptionController
 PSX\Framework\Tests\Controller\Foo\Application\StatusCodeExceptionController
 
 TestApiTableController
 PSX\Framework\Tests\Controller\Foo\Application\TableController
 
 TypeSchemaController
 PSX\Framework\Tests\Controller\Foo\Application\TypeSchemaController
 
 TestHandler
 PSX\Framework\Tests\Messenger\TestHandler
 
 TestAuthorizationCode
 PSX\Framework\Tests\OAuth2\GrantType\TestAuthorizationCode
 
 TestClientCredentials
 PSX\Framework\Tests\OAuth2\GrantType\TestClientCredentials
 
 TestPassword
 PSX\Framework\Tests\OAuth2\GrantType\TestPassword
 
 TestRefreshToken
 PSX\Framework\Tests\OAuth2\GrantType\TestRefreshToken
 
 TestAuthorizer
 PSX\Framework\Tests\OAuth2\TestAuthorizer
 
 TestCallback
 PSX\Framework\Tests\OAuth2\TestCallback
 
 This class is a simple wrapper around guzzle to offer a simple way to send http requests
 PSX\Http\Client\Client
 
 ClientInterface
 PSX\Http\Client\ClientInterface - alias:PSX\Http\Client\Client
 
 CORS
 PSX\Http\Filter\CORS
 
 SchemaManager
 PSX\Schema\SchemaManager
 
 SchemaManagerInterface
 PSX\Schema\SchemaManagerInterface - alias:PSX\Schema\SchemaManager
 
 TableManager
 PSX\Sql\TableManager
 
 TableManagerInterface
 PSX\Sql\TableManagerInterface - alias:PSX\Sql\TableManager
 
 This class offers methods to sanitize values that came from untrusted sources
 PSX\Validate\Validate
 
 CacheItemPoolInterface generates CacheItemInterface objects.
 Psr\Cache\CacheItemPoolInterface - alias:Symfony\Component\Cache\Adapter\ArrayAdapter
 
 Describes the interface of a container that exposes methods to read its entries.
 Psr\Container\ContainerInterface - alias:service_container
 
 Defines a dispatcher for events.
 Psr\EventDispatcher\EventDispatcherInterface - alias:Symfony\Component\EventDispatcher\EventDispatcher
 
 Describes a logger instance.
 Psr\Log\LoggerInterface - alias:Monolog\Logger
 
 An in-memory cache storage.
 Symfony\Component\Cache\Adapter\ArrayAdapter
 
 Symfony\Component\Cache\Adapter\FilesystemAdapter
 
 An Application is the container for a collection of commands.
 Symfony\Component\Console\Application
 
 HelpCommand displays the help for a given command.
 Symfony\Component\Console\Command\HelpCommand
 
 ListCommand displays the list of all available commands for the application.
 Symfony\Component\Console\Command\ListCommand
 
 The EventDispatcherInterface is the central point of Symfony's event listener system.
 Symfony\Component\EventDispatcher\EventDispatcher
 
 Interface for mailers able to send emails synchronous and/or asynchronous.
 Symfony\Component\Mailer\MailerInterface
 
 Symfony\Component\Messenger\Command\StopWorkersCommand
 
 Symfony\Component\Messenger\EventListener\AddErrorDetailsStampListener
 
 Symfony\Component\Messenger\EventListener\DispatchPcntlSignalListener
 
 Symfony\Component\Messenger\EventListener\SendFailedMessageForRetryListener
 
 Symfony\Component\Messenger\EventListener\StopWorkerOnCustomStopExceptionListener
 
 Symfony\Component\Messenger\EventListener\StopWorkerOnRestartSignalListener
 
 Symfony\Component\Messenger\EventListener\StopWorkerOnSignalsListener
 
 Maps a message to a list of handlers.
 Symfony\Component\Messenger\Handler\HandlersLocatorInterface - alias:PSX\Framework\Messenger\HandlersLocator
 
 Symfony\Component\Messenger\MessageBus
 
 Symfony\Component\Messenger\MessageBusInterface - alias:Symfony\Component\Messenger\MessageBus
 
 Symfony\Component\Messenger\Middleware\HandleMessageMiddleware
 
 Symfony\Component\Messenger\Middleware\SendMessageMiddleware
 
 A retry strategy with a constant or exponential retry delay.
 Symfony\Component\Messenger\Retry\MultiplierRetryStrategy
 
 Symfony\Component\Messenger\Retry\RetryStrategyInterface - alias:Symfony\Component\Messenger\Retry\MultiplierRetryStrategy
 
 Symfony\Component\Messenger\Transport\InMemory\InMemoryTransportFactory
 
 Maps a message to a list of senders.
 Symfony\Component\Messenger\Transport\Sender\SendersLocatorInterface - alias:PSX\Framework\Messenger\SendersLocator
 
 Symfony\Component\Messenger\Transport\Serialization\PhpSerializer
 
 Symfony\Component\Messenger\Transport\Serialization\SerializerInterface - alias:Symfony\Component\Messenger\Transport\Serialization\PhpSerializer
 
 Transport that immediately marks messages as received and dispatches for handling.
 Symfony\Component\Messenger\Transport\Sync\SyncTransport
 
 Symfony\Component\Messenger\Transport\TransportFactory
 
 Creates a Messenger transport.
 Symfony\Component\Messenger\Transport\TransportFactoryInterface - alias:Symfony\Component\Messenger\Transport\TransportFactory
 
 Symfony\Component\Messenger\Transport\TransportInterface

 Pro-tip: use interfaces in your type-hints instead of classes to benefit from the dependency inversion principle.